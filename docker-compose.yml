version: '3.8'

services:
  # 
  #                     INFRASTRUCTURE LAYER
  # 
  
  postgres:
    image: postgres:15
    container_name: promptforge-postgres
    environment:
      POSTGRES_USER: promptforge
      POSTGRES_PASSWORD: dev_password_123
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U promptforge"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - promptforge-network

  mongodb:
    image: mongo:7.0
    container_name: promptforge-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: promptforge
      MONGO_INITDB_ROOT_PASSWORD: dev_password_123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - promptforge-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: promptforge-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - promptforge-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: promptforge-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - promptforge-network

  # 
  #                     APPLICATION LAYER
  # 

  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: promptforge-api-gateway
    ports:
      - "9001:9001"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - user-service
      - prompt-service
    networks:
      - promptforge-network
    restart: unless-stopped

  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: promptforge-user-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_service_db
      SPRING_DATASOURCE_USERNAME: promptforge
      SPRING_DATASOURCE_PASSWORD: dev_password_123
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - promptforge-network
    restart: unless-stopped

  prompt-service:
    build:
      context: ./backend/prompt-service
      dockerfile: Dockerfile
    container_name: promptforge-prompt-service
    ports:
      - "9002:9002"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/prompt_service_db
      SPRING_DATASOURCE_USERNAME: promptforge
      SPRING_DATASOURCE_PASSWORD: dev_password_123
      SPRING_DATA_MONGODB_URI: mongodb://promptforge:dev_password_123@mongodb:27017/promptforge_db?authSource=admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - promptforge-network
    restart: unless-stopped

  test-service:
    build:
      context: ./backend/test-service
      dockerfile: Dockerfile
    container_name: promptforge-test-service
    ports:
      - "9003:9003"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/test_service_db
      SPRING_DATASOURCE_USERNAME: promptforge
      SPRING_DATASOURCE_PASSWORD: dev_password_123
      OPENAI_API_KEY: \
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - promptforge-network
    restart: unless-stopped

  marketplace-service:
    build:
      context: ./backend/marketplace-service
      dockerfile: Dockerfile
    container_name: promptforge-marketplace-service
    ports:
      - "9004:9004"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/marketplace_service_db
      SPRING_DATASOURCE_USERNAME: promptforge
      SPRING_DATASOURCE_PASSWORD: dev_password_123
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - promptforge-network
    restart: unless-stopped

  analytics-service:
    build:
      context: ./backend/analytics-service
      dockerfile: Dockerfile
    container_name: promptforge-analytics-service
    ports:
      - "9005:9005"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/analytics_service_db
      SPRING_DATASOURCE_USERNAME: promptforge
      SPRING_DATASOURCE_PASSWORD: dev_password_123
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - promptforge-network
    restart: unless-stopped

volumes:
  postgres_data:
  mongodb_data:

networks:
  promptforge-network:
    driver: bridge